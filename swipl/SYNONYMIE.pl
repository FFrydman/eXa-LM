:- include('REGLES_SYNO.pl').

synonyme(X,Y) :-
	atomic_list_concat(L1,' ',X),
	moteur_synonyme(L1,L2), 
	atomic_list_concat(L2,' ',Y).	


moteur_synonyme(X,Y) :- 
	moteur_syn(X,L,[],Rep2),
	\+ var(L),
	moteur_synonyme(Rep2,Y),!.

moteur_synonyme(X,X) :- !.


moteur_syn([],L,R,R) :- !.

moteur_syn(X,Y,Rep1,R) :- 
	synonyme_syntaxique(X,Y,N),
	append(Rep1,Y,Rep2),
	avanceliste(X,N,L), 
	moteur_syn(L,Y,Rep2,R),!.

moteur_syn([H|T],L,Rep1,R) :- 
	append(Rep1,[H],Rep2),
	moteur_syn(T,L,Rep2,R).
	

sousliste([],N,L,L) :- !.

sousliste([H|T],N,L1,L) :- 
	N > 0,
	N2 is N-1,
	append(L1,[H],L2),
	sousliste(T,N2,L2,L), !.	

sousliste(L0,N,L,L).

avanceliste([H|T],N,L) :- 
	N > 0,
	N2 is N-1,
	avanceliste(T,N2,L), !.	

avanceliste(L,0,L).
























































































































































































































































































































































